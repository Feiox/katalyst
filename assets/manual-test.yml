listener:
  interface: "0.0.0.0:8000"

hosts:
  httpbin:
    balancer: round_robin
    servers:
      - "http://httpbin.org"

routes:
  - path:
      type: regex
      pattern: "^/$"
    handler:
      type: host
      host: httpbin
      path: "/ip"

  - path:
      type: regex
      pattern: "^/files/(?P<file>.*)$"
    handler:
      type: file_server
      root_path: "../assets/"
      selector: '{{ http.matched("file") }}'

  - path:
      type: template
      template: '/test/{{ url.segment("segment") }}/{{ url.all("end") }}'
    methods:
      - get
    handler:
      type: host
      host: httpbin
      path: "/get"
      query:
        segment: '{{ http.matched("segment") }}'
        end: '{{ http.matched("end") }}'
        method: "{{ http.method() }}"
        ip: "{{ http.ip() }}"
        q: '{{ http.query_param("test") }}'
      headers:
        header: '{{ http.header("user-agent") }}'
        claim: '{{ auth.claim("KatalystAuthenticator") }}'
    authenticators:
      - type: http
        url: "https://postman-echo.com/get?thing=something"

  - path:
      type: exact
      path: "/test/post"
    methods:
      - post
    handler:
      type: host
      host: httpbin
      path: "/post"

  - path:
      type: exact
      path: "/test/get-to-post"
    methods:
      - get
    authenticators:
      - type: whitelist
        ips:
          - "127.0.0.2"
          - "127.0.0.1"
          - "127.0.0.4"
    handler:
      type: host
      host: httpbin
      path: "/post"
      method: post
      headers:
        Content-Type: application/json
      body: |
        {
          "remote_address": "{{ http.ip() }}"
        }
